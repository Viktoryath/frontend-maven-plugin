name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: "Run build"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Use cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}"
          restore-keys: |
            ${{ runner.os }}-maven3-
      - name: Configure Java
        uses: actions/setup-java@v4.5.0
        with:
          java-version: "17"
          distribution: temurin
      - name: Cache SonarQube dependencies
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: "Run Maven"
        shell: bash
        run: mvn clean install --batch-mode -PintegrationTests
      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify sonar:sonar -Dsonar.organization=victorit -Dsonar.projectKey=victorit_my_training -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Dsonar.exclusions=target/**,bin/**,**/*.class -Dsonar.report.export.path=/home/runner/work/frontend-maven-plugin/frontend-maven-plugin/target/sonar/codeql-results.sarif
          ls -al .
          ls -al /home/runner/work/frontend-maven-plugin/frontend-maven-plugin/target/
          ls -al /home/runner/work/frontend-maven-plugin/frontend-maven-plugin/target/sonar/
      # Download the SARIF file if it's an artifact from a previous job or step
      #- name: Download SARIF file
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: sarif-file # The artifact name you want to download
      #    path: /home/runner/work/frontend-maven-plugin/frontend-maven-plugin/target/sonar

     # Upload the SARIF results to GitHub CodeQL
      #- name: Upload SARIF results
      #  uses: github/codeql-action/upload-sarif@v3
       # with:
       #   sarif_file: '/home/runner/work/frontend-maven-plugin/frontend-maven-plugin/target/sonar/*.sarif'

      - name: Package
        run: mvn -B clean package -DskipTests

      # Set up JFrog CLI
      - name: Install JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | sh
          sudo mv jfrog /usr/local/bin/
          
      - name: Upload artifacts to Artifactory
        run: |
          jfrog rt u "frontend-maven-plugin/target/*.jar" "exam-snapshot/" --url="https://trialkl8y5h.jfrog.io/ui/packages" --user="$ARTIFACTORY_USER" --password="$ARTIFACTORY_PASSWORD" --threads=1
        env:
          ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
